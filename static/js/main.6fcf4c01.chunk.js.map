{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["apiUrl","App","state","authString","authentificated","sendPing","bind","handleAuthChange","this","setState","a","axios","get","headers","alert","React","Component","Auth","type","onChange","event","props","target","value","onClick","TimeManager","res","console","log","data","times","cities","map","city","City","dates","handleDateChange","oldval","newval","split","day","month","year","newvalFormatted","oldIndex","findIndex","elem","newDates","filter","push","patch","_id","date","moment","add","format","DateInput","id","name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fcf4c01.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios'\nimport moment from 'moment'\n\nconst apiUrl = 'http://localhost:8080/api'\n\nclass App extends React.Component{\n  constructor(){\n    super()\n    this.state = {authString:'',authentificated:false}\n    this.sendPing = this.sendPing.bind(this)\n    this.handleAuthChange = this.handleAuthChange.bind(this)\n  }\n\n  handleAuthChange(authString){\n    this.setState({authString:authString})\n  }\n\n  async sendPing(){\n    try{\n    await axios.get(apiUrl + '/admin/ping', {\n    headers: {\n      'auth-token': this.state.authString\n    }})\n    this.setState({authentificated:true})\n    }\n    catch(err){\n      this.setState({authentificated:false})\n      alert('Nesprávne heslo!')\n    }\n  }\n  render(){\n    return (this.state.authentificated ? <TimeManager authString={this.state.authString} /> : <Auth sendPing={this.sendPing} handleAuthChange={this.handleAuthChange}/>)\n  }\n}\n\nclass Auth extends React.Component{\n  constructor(){\n    super()\n  }\n  render(){\n    return(\n      <div>\n    <input type='text' onChange={(event)=>{this.props.handleAuthChange(event.target.value)}}></input>\n    <button onClick={()=>{this.props.sendPing()}}>Prihlásiť sa</button>\n    </div>\n    )\n  }\n}\n\nclass TimeManager extends React.Component{\n\n  constructor(){\n    super()\n    this.state = {}\n    \n  }\n  async componentDidMount(){\n    const res = await axios.get(apiUrl + '/times')\n    console.log(res.data.times)\n    this.setState({times:res.data.times})\n  }\n  render(){\n    const cities = this.state.times ? this.state.times.map((city) => {return(<City authString={this.props.authString} data={city}></City>)}) : []\n    return(\n      <div>\n        {cities}\n      </div>\n    )\n  }\n}\n\nclass City extends React.Component{\n  constructor(){\n    super()\n    this.state = {dates:[]}\n    this.handleDateChange = this.handleDateChange.bind(this)\n  }\n  componentDidMount(){\n    this.setState({dates:this.props.data.dates})\n  }\n  async handleDateChange(oldval,newval){\n    const [day,month,year] = newval.split('-')\n    const newvalFormatted = `${year}-${month}-${day}`\n    console.log(oldval,newval)\n    const oldIndex = this.state.dates.findIndex(elem => elem == oldval)\n    let newDates\n    console.log(oldIndex)\n    if (oldIndex !== -1){\n      newDates = this.state.dates\n      if (newval === '1999-01-01'){\n        newDates = newDates.filter(elem => elem!=oldval)\n      }\n      else{\n        newDates[oldIndex] = newvalFormatted\n      }\n      this.setState({dates:newDates})\n    }\n    else{\n      newDates = this.state.dates\n      newDates.push(newval)\n      console.log(newDates)\n      this.setState({dates:newDates})\n    }\n    await axios.patch(apiUrl + '/admin/times/' + this.props.data._id,{dates:newDates},{headers:{'auth-token' : this.props.authString}})\n  }\n  render(){\n    const dates = this.state.dates.map((date)=>{\n      return(<DateInput date={date} handleDateChange={this.handleDateChange}/>)})\n    return(\n      <div>\n      <div>{this.props.data.city}</div>\n      <button onClick={()=>{this.handleDateChange('XXX',moment().add(1,'day').format('DD-MM-YYYY'))}}>+</button>\n      {dates}\n      </div>\n    )\n  }\n}\n\nclass DateInput extends React.Component{\n  render(){\n    const [day,month,year] = this.props.date.split('-')\n    return(\n      <div>\n        <input type=\"date\" id=\"start\" name=\"trip-start\"\n    value={`${year}-${month}-${day}`} onChange={(event)=>{this.props.handleDateChange(this.props.date,event.target.value)}}></input>\n        <button onClick={()=>{this.props.handleDateChange(this.props.date,'1999-01-01')}}>X</button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}